"""Add projects table and link to code_files

Revision ID: 04bfafd4a7cf
Revises: 331faed22244
Create Date: 2025-06-19 13:32:49.077994

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '04bfafd4a7cf'
down_revision: Union[str, Sequence[str], None] = '331faed22244'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alias', sa.String(length=255), nullable=False),
    sa.Column('root_path', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at_db', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at_db', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_alias'), 'projects', ['alias'], unique=True)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_root_path'), 'projects', ['root_path'], unique=True)

    with op.batch_alter_table('code_files', schema=None) as batch_op:
        # Since the table is empty, we can add a non-nullable column.
        # If it had data, we'd need to make it nullable, update data, then make non-nullable.
        batch_op.add_column(sa.Column('project_id', sa.Integer(), nullable=False, server_default='-1'))
        batch_op.create_foreign_key(
            batch_op.f('fk_code_files_project_id_projects'), 
            'projects', ['project_id'], ['id']
        )
        batch_op.create_index(batch_op.f('ix_code_files_project_id'), ['project_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_code_files_project_id_file_path'), ['project_id', 'file_path'], unique=True)
        batch_op.drop_index('ix_code_files_project_root')
        batch_op.drop_index('ix_code_files_project_root_file_path')
        batch_op.drop_column('project_root')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('code_files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('project_root', sa.TEXT(), nullable=False, server_default='UNKNOWN'))
        batch_op.drop_index(batch_op.f('ix_code_files_project_id_file_path'))
        batch_op.create_index('ix_code_files_project_root_file_path', ['project_root', 'file_path'], unique=True)
        batch_op.drop_index(batch_op.f('ix_code_files_project_id'))
        batch_op.create_index('ix_code_files_project_root', ['project_root'], unique=False)
        batch_op.drop_constraint(batch_op.f('fk_code_files_project_id_projects'), type_='foreignkey')
        batch_op.drop_column('project_id')

    op.drop_index(op.f('ix_projects_root_path'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_alias'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
