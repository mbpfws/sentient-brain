[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sentient-brain"
version = "0.1.0"
description = "Multi-Agent AI Code Developer System with SurrealDB"
authors = [{name = "Sentient Brain Team"}]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["ai", "agents", "coding", "surrealdb", "multi-agent"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.115.13",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.28.0",
    "aiofiles>=24.1.0",
    "python-multipart>=0.0.18",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "structlog>=24.4.0",
    "rich>=13.9.0",
    "typer>=0.16.0",
    "asyncio-mqtt>=0.13.0",
    "groq>=0.28.0",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "google-genai>=1.21.0",
    "surrealdb>=1.0.4",
    "langchain>=0.0.300",
    "langchain-core>=0.0.12",
    "langgraph>=0.0.20",
    "crewai>=0.1.0",
    "sentence-transformers>=2.2.2",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "scikit-learn>=1.3.0",
    "networkx>=3.2.0",
    "plotly>=5.17.0",
    "streamlit>=1.28.0",
    "websockets>=12.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "watchdog>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
    "faker>=19.12.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/sentient-brain/sentient-brain"
Documentation = "https://sentient-brain.readthedocs.io"
Repository = "https://github.com/sentient-brain/sentient-brain"
Issues = "https://github.com/sentient-brain/sentient-brain/issues"

[project.scripts]
sentient-brain = "src.main:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml", "*.md", "*.txt"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "groq.*",
    "anthropic.*",
    "crewai.*",
    "langgraph.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "agent: marks tests related to agent functionality",
    "api: marks tests related to API endpoints",
    "db: marks tests related to database operations",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"] 