version: '3.8'

services:
  # SurrealDB - Unified Multi-Model Database
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: sentient-brain-surrealdb
    command: start --log trace --user root --pass root file:///data/database.db
    ports:
      - "8000:8000"
    volumes:
      - surrealdb_data:/data
    environment:
      - SURREAL_LOG=trace
      - SURREAL_USER=root
      - SURREAL_PASS=root
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sentient-brain-network

  # Multi-Agent System API
  sentient-brain-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentient-brain-api
    ports:
      - "8001:8000"
    environment:
      - SURREAL_URL=ws://surrealdb:8000/rpc
      - SURREAL_USER=root
      - SURREAL_PASS=root
      - SURREAL_NAMESPACE=sentient_brain
      - SURREAL_DATABASE=multi_agent
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=llama-3.1-70b-versatile
      - LOG_LEVEL=INFO
    depends_on:
      surrealdb:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - sentient-brain-network
    restart: unless-stopped

  # Streamlit UI (Optional - for development/testing)
  streamlit-ui:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: sentient-brain-ui
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://sentient-brain-api:8000
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
    depends_on:
      - sentient-brain-api
    volumes:
      - ./ui:/app/ui:ro
    networks:
      - sentient-brain-network
    restart: unless-stopped
    profiles:
      - ui

  # Redis (Optional - for caching and task queues)
  redis:
    image: redis:7-alpine
    container_name: sentient-brain-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sentient-brain-network
    profiles:
      - cache

  # Nginx (Optional - for production reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: sentient-brain-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - sentient-brain-api
      - streamlit-ui
    networks:
      - sentient-brain-network
    profiles:
      - production

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: sentient-brain-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sentient-brain-network
    profiles:
      - monitoring

  # Grafana for visualization (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: sentient-brain-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus
    networks:
      - sentient-brain-network
    profiles:
      - monitoring

volumes:
  surrealdb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  sentient-brain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
